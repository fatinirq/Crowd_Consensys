{
  "contractName": "CrowdMember",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "accountAddress",
          "type": "address"
        }
      ],
      "name": "LogEnrolled",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getEnrolledAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_firstNameMember",
          "type": "string"
        },
        {
          "name": "_lastNameMember",
          "type": "string"
        },
        {
          "name": "_emailMember",
          "type": "string"
        }
      ],
      "name": "storeMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "enrolled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMember",
      "outputs": [
        {
          "components": [
            {
              "name": "firstName",
              "type": "string"
            },
            {
              "name": "lastName",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemeberCount",
      "outputs": [
        {
          "name": "tempCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getMember\",\"outputs\":[{\"components\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMemeberCount\",\"outputs\":[{\"name\":\"tempCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstNameMember\",\"type\":\"string\"},{\"name\":\"_lastNameMember\",\"type\":\"string\"},{\"name\":\"_emailMember\",\"type\":\"string\"}],\"name\":\"storeMember\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enrolled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getEnrolledAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"LogEnrolled\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"enrolled()\":{\"details\":\"Retrieving  member data in enrolled and members lookups.\",\"return\":\"Data of msg.sender .\"},\"getMember()\":{\"details\":\"Retrieving  member data from enrolled and members lookups.\",\"return\":\"Data of msg.sender .\"},\"getMemeberCount()\":{\"return\":\"tempCount The counted members of the contracts .\"},\"storeMember(string,string,string)\":{\"details\":\"Storing  member data in enrolled and members\",\"params\":{\"_emailMember\":\": email of the member\",\"_firstNameMember\":\": First Name of the member\",\"_lastNameMember\":\": Last name of the member\"},\"return\":\"a flag refered that the member enrolled succefflly.\"}},\"title\":\"Crowd Member  \"},\"userdoc\":{\"methods\":{\"enrolled()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"getMember()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"getMemeberCount()\":{\"notice\":\"This function called by  user interface to get info of specific member\"},\"storeMember(string,string,string)\":{\"notice\":\"This function called by frontend to pass the parameters and register new memebr\"}}}},\"settings\":{\"compilationTarget\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol\":\"CrowdMember\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol\":{\"keccak256\":\"0xfbe44b44c4f5d1c812c062c1de012255240275ebd575c981619105be35f66fe2\",\"urls\":[\"bzzr://a5079ce1706ffa79c68480309896bf18b9a2d883ec40c1354913c0a738b5be63\"]},\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol\":{\"keccak256\":\"0xc356240b3761a3b3547bd7caf05af3924573919311db7766763b9caa1587c540\",\"urls\":[\"bzzr://d6ac58b5d4a155600650dd3a3943cfd442ef38da1d49f0d8eb3b0d395f034dd6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5030600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b5f806100616000396000f3fe60806040526004361061004a5760003560e01c80630274c0941461004f5780634ef93bac1461007a578063750cba0d146100a55780639a308dcc146100e2578063ed9187fc1461010d575b600080fd5b34801561005b57600080fd5b5061006461014a565b60405161007191906109b0565b60405180910390f35b34801561008657600080fd5b5061008f61041a565b60405161009c91906109d2565b60405180910390f35b3480156100b157600080fd5b506100cc60048036036100c791908101906107e9565b610426565b6040516100d99190610975565b60405180910390f35b3480156100ee57600080fd5b506100f76105e7565b6040516101049190610975565b60405180910390f35b34801561011957600080fd5b50610134600480360361012f91908101906107c0565b61063b565b6040516101419190610975565b60405180910390f35b610152610691565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146101e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc90610990565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b505050505081525050905090565b60008054905080905090565b6000610430610691565b84816000018190525083816020018190525082816040018190525080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104a79291906106b2565b5060208201518160010190805190602001906104c49291906106b2565b5060408201518160020190805190602001906104e19291906106b2565b509050506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb60405160405180910390a2600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106f357805160ff1916838001178555610721565b82800160010185558215610721579182015b82811115610720578251825591602001919060010190610705565b5b50905061072e9190610732565b5090565b61075491905b80821115610750576000816000905550600101610738565b5090565b90565b60008135905061076681610b0e565b92915050565b600082601f83011261077d57600080fd5b813561079061078b82610a1a565b6109ed565b915080825260208301602083018583830111156107ac57600080fd5b6107b7838284610abb565b50505092915050565b6000602082840312156107d257600080fd5b60006107e084828501610757565b91505092915050565b6000806000606084860312156107fe57600080fd5b600084013567ffffffffffffffff81111561081857600080fd5b6108248682870161076c565b935050602084013567ffffffffffffffff81111561084157600080fd5b61084d8682870161076c565b925050604084013567ffffffffffffffff81111561086a57600080fd5b6108768682870161076c565b9150509250925092565b61088981610a85565b82525050565b600061089a82610a46565b6108a48185610a51565b93506108b4818560208601610aca565b6108bd81610afd565b840191505092915050565b60006108d5601683610a62565b91507f4d656d626572206973206e6f7420656e726f6c6c6564000000000000000000006000830152602082019050919050565b60006060830160008301518482036000860152610925828261088f565b9150506020830151848203602086015261093f828261088f565b91505060408301518482036040860152610959828261088f565b9150508091505092915050565b61096f81610ab1565b82525050565b600060208201905061098a6000830184610880565b92915050565b600060208201905081810360008301526109a9816108c8565b9050919050565b600060208201905081810360008301526109ca8184610908565b905092915050565b60006020820190506109e76000830184610966565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610a1057600080fd5b8060405250919050565b600067ffffffffffffffff821115610a3157600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a7e82610a91565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ae8578082015181840152602081019050610acd565b83811115610af7576000848401525b50505050565b6000601f19601f8301169050919050565b610b1781610a73565b8114610b2257600080fd5b5056fea265627a7a723058205776078d75710752861ba9d430dc73413a512c98ddb353fd61c337b19d894d596c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630274c0941461004f5780634ef93bac1461007a578063750cba0d146100a55780639a308dcc146100e2578063ed9187fc1461010d575b600080fd5b34801561005b57600080fd5b5061006461014a565b60405161007191906109b0565b60405180910390f35b34801561008657600080fd5b5061008f61041a565b60405161009c91906109d2565b60405180910390f35b3480156100b157600080fd5b506100cc60048036036100c791908101906107e9565b610426565b6040516100d99190610975565b60405180910390f35b3480156100ee57600080fd5b506100f76105e7565b6040516101049190610975565b60405180910390f35b34801561011957600080fd5b50610134600480360361012f91908101906107c0565b61063b565b6040516101419190610975565b60405180910390f35b610152610691565b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146101e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc90610990565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b505050505081525050905090565b60008054905080905090565b6000610430610691565b84816000018190525083816020018190525082816040018190525080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104a79291906106b2565b5060208201518160010190805190602001906104c49291906106b2565b5060408201518160020190805190602001906104e19291906106b2565b509050506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f990c442e6adb818b8fa7db3cf1023decd07f7b66e5306928c7ed527d974192bb60405160405180910390a2600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106f357805160ff1916838001178555610721565b82800160010185558215610721579182015b82811115610720578251825591602001919060010190610705565b5b50905061072e9190610732565b5090565b61075491905b80821115610750576000816000905550600101610738565b5090565b90565b60008135905061076681610b0e565b92915050565b600082601f83011261077d57600080fd5b813561079061078b82610a1a565b6109ed565b915080825260208301602083018583830111156107ac57600080fd5b6107b7838284610abb565b50505092915050565b6000602082840312156107d257600080fd5b60006107e084828501610757565b91505092915050565b6000806000606084860312156107fe57600080fd5b600084013567ffffffffffffffff81111561081857600080fd5b6108248682870161076c565b935050602084013567ffffffffffffffff81111561084157600080fd5b61084d8682870161076c565b925050604084013567ffffffffffffffff81111561086a57600080fd5b6108768682870161076c565b9150509250925092565b61088981610a85565b82525050565b600061089a82610a46565b6108a48185610a51565b93506108b4818560208601610aca565b6108bd81610afd565b840191505092915050565b60006108d5601683610a62565b91507f4d656d626572206973206e6f7420656e726f6c6c6564000000000000000000006000830152602082019050919050565b60006060830160008301518482036000860152610925828261088f565b9150506020830151848203602086015261093f828261088f565b91505060408301518482036040860152610959828261088f565b9150508091505092915050565b61096f81610ab1565b82525050565b600060208201905061098a6000830184610880565b92915050565b600060208201905081810360008301526109a9816108c8565b9050919050565b600060208201905081810360008301526109ca8184610908565b905092915050565b60006020820190506109e76000830184610966565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610a1057600080fd5b8060405250919050565b600067ffffffffffffffff821115610a3157600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a7e82610a91565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ae8578082015181840152602081019050610acd565b83811115610af7576000848401525b50505050565b6000601f19601f8301169050919050565b610b1781610a73565b8114610b2257600080fd5b5056fea265627a7a723058205776078d75710752861ba9d430dc73413a512c98ddb353fd61c337b19d894d596c6578706572696d656e74616cf50037",
  "sourceMap": "377:3135:0:-;;;401:51;8:9:-1;5:2;;;30:1;27;20:12;5:2;401:51:0;443:4;426:8;;:22;;;;;;;;;;;;;;;;;;377:3135;;;;;;",
  "deployedSourceMap": "377:3135:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3494:8;;;2745:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2745:131:0;;;:::i;:::-;;;;;;;;;;;;;;;;3034:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3034:119:0;;;:::i;:::-;;;;;;;;;;;;;;;;1758:507;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1758:507:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2457:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2457:93:0;;;:::i;:::-;;;;;;;;;;;;;;;;1253:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1253:119:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2745:131;2801:32;;:::i;:::-;1120:4;1091:33;;:15;:27;1107:10;1091:27;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;1082:69;;;;;;;;;;;;;;;;;;;;;;2851:7;:19;2859:10;2851:19;;;;;;;;;;;;;;;2843:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2745:131;:::o;3034:119::-;3082:14;3115:12;;3105:22;;3140:9;3133:16;;3034:119;:::o;1758:507::-;1884:4;1896:40;;:::i;:::-;1958:16;1940:7;:17;;:34;;;;1996:15;1978:7;:16;;:33;;;;2029:12;2015:7;:13;;:26;;;;2071:7;2051;:19;2059:10;2051:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2111:4;2083:15;:27;2099:10;2083:27;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2133:1;2119:12;;:15;;;;;;;;;;;2155:10;2143:23;;;;;;;;;;;;2176:15;:27;2192:10;2176:27;;;;;;;;;;;;;;;;;;;;;;;;;2169:34;;;1758:507;;;;;:::o;2457:93::-;2501:4;2518:15;:27;2534:10;2518:27;;;;;;;;;;;;;;;;;;;;;;;;;2510:36;;2457:93;:::o;1253:119::-;1319:4;1340:15;:25;1356:8;1340:25;;;;;;;;;;;;;;;;;;;;;;;;;1333:32;;1253:119;;;:::o;377:3135::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:241;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;748:1;765:53;810:7;801:6;790:9;786:22;765:53;;;755:63;;727:97;659:175;;;;;841:809;;;;1009:2;997:9;988:7;984:23;980:32;977:2;;;1025:1;1022;1015:12;977:2;1088:1;1077:9;1073:17;1060:31;1111:18;1103:6;1100:30;1097:2;;;1143:1;1140;1133:12;1097:2;1163:63;1218:7;1209:6;1198:9;1194:22;1163:63;;;1153:73;;1039:193;1291:2;1280:9;1276:18;1263:32;1315:18;1307:6;1304:30;1301:2;;;1347:1;1344;1337:12;1301:2;1367:63;1422:7;1413:6;1402:9;1398:22;1367:63;;;1357:73;;1242:194;1495:2;1484:9;1480:18;1467:32;1519:18;1511:6;1508:30;1505:2;;;1551:1;1548;1541:12;1505:2;1571:63;1626:7;1617:6;1606:9;1602:22;1571:63;;;1561:73;;1446:194;971:679;;;;;;1657:104;1734:21;1749:5;1734:21;;;1729:3;1722:34;1716:45;;;1768:319;;1866:35;1895:5;1866:35;;;1913:61;1967:6;1962:3;1913:61;;;1906:68;;1979:52;2024:6;2019:3;2012:4;2005:5;2001:16;1979:52;;;2052:29;2074:6;2052:29;;;2047:3;2043:39;2036:46;;1846:241;;;;;;2095:364;;2255:67;2319:2;2314:3;2255:67;;;2248:74;;2355:66;2351:1;2346:3;2342:11;2335:87;2450:2;2445:3;2441:12;2434:19;;2241:218;;;;2542:877;;2697:4;2692:3;2688:14;2785:3;2778:5;2774:15;2768:22;2835:3;2829:4;2825:14;2819:3;2814;2810:13;2803:37;2855:69;2919:4;2905:12;2855:69;;;2847:77;;2717:219;3013:4;3006:5;3002:16;2996:23;3065:3;3059:4;3055:14;3048:4;3043:3;3039:14;3032:38;3085:69;3149:4;3135:12;3085:69;;;3077:77;;2946:220;3240:4;3233:5;3229:16;3223:23;3292:3;3286:4;3282:14;3275:4;3270:3;3266:14;3259:38;3312:69;3376:4;3362:12;3312:69;;;3304:77;;3176:217;3410:4;3403:11;;2670:749;;;;;;3426:113;3509:24;3527:5;3509:24;;;3504:3;3497:37;3491:48;;;3546:201;;3658:2;3647:9;3643:18;3635:26;;3672:65;3734:1;3723:9;3719:17;3710:6;3672:65;;;3629:118;;;;;3754:407;;3945:2;3934:9;3930:18;3922:26;;3995:9;3989:4;3985:20;3981:1;3970:9;3966:17;3959:47;4020:131;4146:4;4020:131;;;4012:139;;3916:245;;;;4168:369;;4340:2;4329:9;4325:18;4317:26;;4390:9;4384:4;4380:20;4376:1;4365:9;4361:17;4354:47;4415:112;4522:4;4513:6;4415:112;;;4407:120;;4311:226;;;;;4544:213;;4662:2;4651:9;4647:18;4639:26;;4676:71;4744:1;4733:9;4729:17;4720:6;4676:71;;;4633:124;;;;;4764:256;;4826:2;4820:9;4810:19;;4864:4;4856:6;4852:17;4963:6;4951:10;4948:22;4927:18;4915:10;4912:34;4909:62;4906:2;;;4984:1;4981;4974:12;4906:2;5004:10;5000:2;4993:22;4804:216;;;;;5027:259;;5171:18;5163:6;5160:30;5157:2;;;5203:1;5200;5193:12;5157:2;5247:4;5243:9;5236:4;5228:6;5224:17;5220:33;5212:41;;5276:4;5270;5266:15;5258:23;;5094:192;;;;5293:88;;5370:5;5364:12;5354:22;;5348:33;;;;5389:153;;5494:6;5489:3;5482:19;5531:4;5526:3;5522:14;5507:29;;5475:67;;;;;5551:163;;5666:6;5661:3;5654:19;5703:4;5698:3;5694:14;5679:29;;5647:67;;;;;5722:91;;5784:24;5802:5;5784:24;;;5773:35;;5767:46;;;;5820:85;;5893:5;5886:13;5879:21;5868:32;;5862:43;;;;5912:121;;5985:42;5978:5;5974:54;5963:65;;5957:76;;;;6040:72;;6102:5;6091:16;;6085:27;;;;6120:145;6201:6;6196:3;6191;6178:30;6257:1;6248:6;6243:3;6239:16;6232:27;6171:94;;;;6274:268;6339:1;6346:101;6360:6;6357:1;6354:13;6346:101;;;6436:1;6431:3;6427:11;6421:18;6417:1;6412:3;6408:11;6401:39;6382:2;6379:1;6375:10;6370:15;;6346:101;;;6462:6;6459:1;6456:13;6453:2;;;6527:1;6518:6;6513:3;6509:16;6502:27;6453:2;6323:219;;;;;6550:97;;6638:2;6634:7;6629:2;6622:5;6618:14;6614:28;6604:38;;6598:49;;;;6655:117;6724:24;6742:5;6724:24;;;6717:5;6714:35;6704:2;;6763:1;6760;6753:12;6704:2;6698:74;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n/// @title A simulator for crowd sourcing and funding members and projects\n/// @author Fatin Alkinani\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without side effects\npragma experimental ABIEncoderV2;\nimport \"./CrowdStructure.sol\";\n\n/** @title Crowd Member  */\n contract CrowdMember\n {\nconstructor()public\n{\n\n  deployed=address(this);\n\n}\n\n//State variables\n\nuint  membersCount ;//setting a counter of al members\n//bytes32 public txID ;\nuint   indexProjects;//unused, palnned for the next step\n\naddress private deployed ;\n////Lockups\n///_____\n// mapping address to CrowdMember\nmapping (address=>CrowdStructure.MemberData) private members;\n//Marking members  after success registeration\nmapping (address=>bool) private enrolledMembers;\n\nmapping (address=>CrowdStructure.Project)private projects ;///planned for the next step\n\n/////Lockup between member adress and his projects\nmapping (address=>address) private ownerToProjects;\n\n///Modifiers\nmodifier isEnrolled()\n{\n  require (enrolledMembers[msg.sender]==true, \"Member is not enrolled\");\n  _;\n}\n////*events*///\nevent LogEnrolled(address indexed accountAddress);\n\n//functions\n//_________\n function getEnrolledAddress(address _address) view public returns(bool)\n  {\n    return enrolledMembers[_address];\n    }\n\n  /** @notice This function called by frontend to pass the parameters and register new memebr\n    * @dev Storing  member data in enrolled and members\n    * @param _firstNameMember : First Name of the member\n    * @param _lastNameMember : Last name of the member\n    * @param _emailMember : email of the member\n    * @return a flag refered that the member enrolled succefflly.\n    */\n\nfunction storeMember(string memory _firstNameMember,string memory _lastNameMember, string memory _emailMember)\npublic\nreturns(bool)\n{\n\n\n  CrowdStructure.MemberData memory _member;\n  _member.firstName=_firstNameMember;\n  _member.lastName= _lastNameMember;\n  _member.email=_emailMember;\n////\n\n  members[msg.sender]=_member;\n\n  enrolledMembers[msg.sender]=true;\n  membersCount+=1;\n  emit LogEnrolled(msg.sender);\n\nreturn enrolledMembers[msg.sender];\n\n//  txID=keccak256(abi.encodePacked(index2,msg.sender));\n\n}\n/** @notice This function called by  user interface to get info of specific member\n  * @dev Retrieving  member data in enrolled and members lookups.\n\n  * @return Data of msg.sender .\n  */\n\n\n function  enrolled()  public view returns  (bool)\n {\nreturn (enrolledMembers[msg.sender]);\n }\n/** @notice This function called by  user interface to get info of specific member\n  * @dev Retrieving  member data from enrolled and members lookups.\n\n  * @return Data of msg.sender .\n  */\n\n\n  function  getMember()  public view isEnrolled returns  (CrowdStructure.MemberData memory )\n {\n\n   return (members[msg.sender]);\n\n }\n\n\n\n /** @notice This function called by  user interface to get info of specific member\n   * @return tempCount The counted members of the contracts .\n   */\n\n function getMemeberCount() public view returns (uint tempCount)\n {\n    tempCount=membersCount;\n    return tempCount;\n }\n\n\n\n // Fallback function - Called if other functions don't match call or\n    // sent ether without data\n    // Typically, called when invalid data is sent\n    // Added so ether sent to this contract is reverted if the contract fails\n    // otherwise, the sender's money is transferred to contract\n    function () external payable {\n        revert();\n    }\n\n}\n",
  "sourcePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
  "ast": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
    "exportedSymbols": {
      "CrowdMember": [
        174
      ]
    },
    "id": 175,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:0"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 175,
        "sourceUnit": 586,
        "src": "316:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Member  ",
        "fullyImplemented": true,
        "id": 174,
        "linearizedBaseContracts": [
          174
        ],
        "name": "CrowdMember",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "421:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "426:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1005,
                          "src": "443:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrowdMember_$174",
                            "typeString": "contract CrowdMember"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CrowdMember_$174",
                            "typeString": "contract CrowdMember"
                          }
                        ],
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "435:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "435:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "426:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "426:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:0"
            },
            "scope": 174,
            "src": "401:51:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "membersCount",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "473:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "473:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "indexProjects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "551:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "609:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "691:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.MemberData)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "691:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.MemberData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 21,
                "name": "CrowdStructure.MemberData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 562,
                "src": "709:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                  "typeString": "struct CrowdStructure.MemberData"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "enrolledMembers",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "800:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "818:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "850:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$584_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.Project)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "859:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "850:41:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$584_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.Project)"
              },
              "valueType": {
                "contractScope": null,
                "id": 29,
                "name": "CrowdStructure.Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 584,
                "src": "868:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$584_storage_ptr",
                  "typeString": "struct CrowdStructure.Project"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "name": "ownerToProjects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "990:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "999:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1008:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "1078:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "enrolledMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1091:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 41,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "1107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1107:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1091:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1091:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d656d626572206973206e6f7420656e726f6c6c6564",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_745d9e16f20b6a047e2d7f5efbae0b15f673e020ea39d15a8ae56fff4a44e5e8",
                          "typeString": "literal_string \"Member is not enrolled\""
                        },
                        "value": "Member is not enrolled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_745d9e16f20b6a047e2d7f5efbae0b15f673e020ea39d15a8ae56fff4a44e5e8",
                          "typeString": "literal_string \"Member is not enrolled\""
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:69:0"
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "1155:1:0"
                }
              ]
            },
            "documentation": "Modifiers",
            "id": 49,
            "name": "isEnrolled",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:2:0"
            },
            "src": "1056:103:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "/*events*///",
            "id": 53,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1194:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:32:0"
            },
            "src": "1176:50:0"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1327:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1340:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 62,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 61,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1356:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1340:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "1333:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1281:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:18:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1319:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:6:0"
            },
            "scope": 174,
            "src": "1253:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1890:375:0",
              "statements": [
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "name": "_member",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1896:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 78,
                        "name": "CrowdStructure.MemberData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 562,
                        "src": "1896:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                          "typeString": "struct CrowdStructure.MemberData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 80,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1896:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1940:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 557,
                      "src": "1940:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "_firstNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1958:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1940:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "1978:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_lastNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1996:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1978:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2015:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "2015:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "_emailMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2029:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2015:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2059:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2059:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2051:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_storage",
                        "typeString": "struct CrowdStructure.MemberData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "_member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2071:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData memory"
                      }
                    },
                    "src": "2051:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "enrolledMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2083:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2099:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2099:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2083:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2111:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2083:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2119:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2133:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2119:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:15:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2155:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2155:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 117,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2143:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2143:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "EmitStatement",
                  "src": "2138:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2176:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 125,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "2192:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2192:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2176:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2169:34:0"
                }
              ]
            },
            "documentation": "@notice This function called by frontend to pass the parameters and register new memebr\n@dev Storing  member data in enrolled and members\n@param _firstNameMember : First Name of the member\n@param _lastNameMember : Last name of the member\n@param _emailMember : email of the member\n@return a flag refered that the member enrolled succefflly.",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "_firstNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1779:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "name": "_lastNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1810:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "_emailMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1841:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1778:90:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1884:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1883:6:0"
            },
            "scope": 174,
            "src": "1758:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "2508:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "enrolledMembers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2518:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2518:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 137,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2517:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "2510:36:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data in enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrolled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:2:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "2501:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:6:0"
            },
            "scope": 174,
            "src": "2457:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2837:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                            "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2859:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2859:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2851:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_storage",
                          "typeString": "struct CrowdStructure.MemberData storage ref"
                        }
                      }
                    ],
                    "id": 151,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2850:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "2843:28:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data from enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "isEnrolled",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 49,
                  "src": "2780:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2780:10:0"
              }
            ],
            "name": "getMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2764:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2801:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                    "typeString": "struct CrowdStructure.MemberData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "CrowdStructure.MemberData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 562,
                    "src": "2801:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                      "typeString": "struct CrowdStructure.MemberData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2800:35:0"
            },
            "scope": 174,
            "src": "2745:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "3099:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "tempCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3105:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3115:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3105:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "name": "tempCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "3140:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "3133:16:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@return tempCount The counted members of the contracts .",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMemeberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "tempCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "3082:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:16:0"
            },
            "scope": 174,
            "src": "3034:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "3484:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        994,
                        995
                      ],
                      "referencedDeclaration": 994,
                      "src": "3494:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 173,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3464:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:0:0"
            },
            "scope": 174,
            "src": "3455:54:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 175,
        "src": "377:3135:0"
      }
    ],
    "src": "0:3513:0"
  },
  "legacyAST": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
    "exportedSymbols": {
      "CrowdMember": [
        174
      ]
    },
    "id": 175,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:0"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 175,
        "sourceUnit": 586,
        "src": "316:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Member  ",
        "fullyImplemented": true,
        "id": 174,
        "linearizedBaseContracts": [
          174
        ],
        "name": "CrowdMember",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "421:31:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "426:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1005,
                          "src": "443:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrowdMember_$174",
                            "typeString": "contract CrowdMember"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CrowdMember_$174",
                            "typeString": "contract CrowdMember"
                          }
                        ],
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "435:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 9,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "435:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "426:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "426:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:0"
            },
            "scope": 174,
            "src": "401:51:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "membersCount",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "473:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "473:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "indexProjects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "551:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "609:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "691:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.MemberData)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "691:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.MemberData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 21,
                "name": "CrowdStructure.MemberData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 562,
                "src": "709:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                  "typeString": "struct CrowdStructure.MemberData"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "name": "enrolledMembers",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "800:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "818:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "850:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$584_storage_$",
              "typeString": "mapping(address => struct CrowdStructure.Project)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "859:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "850:41:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$584_storage_$",
                "typeString": "mapping(address => struct CrowdStructure.Project)"
              },
              "valueType": {
                "contractScope": null,
                "id": 29,
                "name": "CrowdStructure.Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 584,
                "src": "868:22:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$584_storage_ptr",
                  "typeString": "struct CrowdStructure.Project"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "name": "ownerToProjects",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "990:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "999:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "990:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1008:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "1078:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "enrolledMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1091:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 41,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 39,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "1107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1107:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1091:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1091:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d656d626572206973206e6f7420656e726f6c6c6564",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1126:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_745d9e16f20b6a047e2d7f5efbae0b15f673e020ea39d15a8ae56fff4a44e5e8",
                          "typeString": "literal_string \"Member is not enrolled\""
                        },
                        "value": "Member is not enrolled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_745d9e16f20b6a047e2d7f5efbae0b15f673e020ea39d15a8ae56fff4a44e5e8",
                          "typeString": "literal_string \"Member is not enrolled\""
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:69:0"
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "1155:1:0"
                }
              ]
            },
            "documentation": "Modifiers",
            "id": 49,
            "name": "isEnrolled",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:2:0"
            },
            "src": "1056:103:0",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "/*events*///",
            "id": 53,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "name": "accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1194:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:32:0"
            },
            "src": "1176:50:0"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1327:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1340:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 62,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 61,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1356:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1340:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "1333:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnrolledAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1281:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:18:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1319:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:6:0"
            },
            "scope": 174,
            "src": "1253:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1890:375:0",
              "statements": [
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "name": "_member",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "1896:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 78,
                        "name": "CrowdStructure.MemberData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 562,
                        "src": "1896:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                          "typeString": "struct CrowdStructure.MemberData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 80,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1896:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1940:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 557,
                      "src": "1940:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "_firstNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1958:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1940:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 559,
                      "src": "1978:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_lastNameMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1996:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1978:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2015:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                          "typeString": "struct CrowdStructure.MemberData memory"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "2015:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "_emailMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2029:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2015:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2059:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2059:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2051:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_storage",
                        "typeString": "struct CrowdStructure.MemberData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "_member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2071:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                        "typeString": "struct CrowdStructure.MemberData memory"
                      }
                    },
                    "src": "2051:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "enrolledMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2083:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2099:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2099:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2083:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2111:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2083:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2119:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2133:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2119:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:15:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2155:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2155:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 117,
                      "name": "LogEnrolled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2143:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2143:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "EmitStatement",
                  "src": "2138:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "enrolledMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2176:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 125,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "2192:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2192:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2176:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 75,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "2169:34:0"
                }
              ]
            },
            "documentation": "@notice This function called by frontend to pass the parameters and register new memebr\n@dev Storing  member data in enrolled and members\n@param _firstNameMember : First Name of the member\n@param _lastNameMember : Last name of the member\n@param _emailMember : email of the member\n@return a flag refered that the member enrolled succefflly.",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "_firstNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1779:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "name": "_lastNameMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1810:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "_emailMember",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1841:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1778:90:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1884:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1883:6:0"
            },
            "scope": 174,
            "src": "1758:507:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "2508:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "enrolledMembers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2518:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2534:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2518:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 137,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2517:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "2510:36:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data in enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enrolled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:2:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "2501:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:6:0"
            },
            "scope": 174,
            "src": "2457:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2837:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MemberData_$562_storage_$",
                            "typeString": "mapping(address => struct CrowdStructure.MemberData storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2859:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2859:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2851:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MemberData_$562_storage",
                          "typeString": "struct CrowdStructure.MemberData storage ref"
                        }
                      }
                    ],
                    "id": 151,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2850:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage",
                      "typeString": "struct CrowdStructure.MemberData storage ref"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "2843:28:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@dev Retrieving  member data from enrolled and members lookups.\n@return Data of msg.sender .",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "isEnrolled",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 49,
                  "src": "2780:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2780:10:0"
              }
            ],
            "name": "getMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2764:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2801:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MemberData_$562_memory_ptr",
                    "typeString": "struct CrowdStructure.MemberData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "CrowdStructure.MemberData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 562,
                    "src": "2801:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MemberData_$562_storage_ptr",
                      "typeString": "struct CrowdStructure.MemberData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2800:35:0"
            },
            "scope": 174,
            "src": "2745:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "3099:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "tempCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3105:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "membersCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3115:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3105:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "name": "tempCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "3140:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "3133:16:0"
                }
              ]
            },
            "documentation": "@notice This function called by  user interface to get info of specific member\n@return tempCount The counted members of the contracts .",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMemeberCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "tempCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "3082:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:16:0"
            },
            "scope": 174,
            "src": "3034:119:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "3484:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        994,
                        995
                      ],
                      "referencedDeclaration": 994,
                      "src": "3494:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 173,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3464:2:0"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:0:0"
            },
            "scope": 174,
            "src": "3455:54:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 175,
        "src": "377:3135:0"
      }
    ],
    "src": "0:3513:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x41Ba78d7C37875DA7e9EA1B55999181131ce519c",
      "transactionHash": "0xe0e91013c29ad98331433dc2b96a0badbac6fc71f3e92608b67687113a33451e"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5758F6Ac60DaC3D9CF7449db6e026fb47E32d830",
      "transactionHash": "0x40f95f6ae8f4b84282092fdb7c5f14fdbcfddf5eda2d1b8bac4fdd8539c6d93f"
    },
    "1580663296891": {
      "events": {},
      "links": {},
      "address": "0x33972a19e5376f7eb93246868956a46D4781e346",
      "transactionHash": "0x06bd439a2fc6746720d5b691591b8562f540d121b19c688f7c5a4393dfa4b588"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-02-02T17:13:37.090Z",
  "devdoc": {
    "methods": {
      "enrolled()": {
        "details": "Retrieving  member data in enrolled and members lookups.",
        "return": "Data of msg.sender ."
      },
      "getMember()": {
        "details": "Retrieving  member data from enrolled and members lookups.",
        "return": "Data of msg.sender ."
      },
      "getMemeberCount()": {
        "return": "tempCount The counted members of the contracts ."
      },
      "storeMember(string,string,string)": {
        "details": "Storing  member data in enrolled and members",
        "params": {
          "_emailMember": ": email of the member",
          "_firstNameMember": ": First Name of the member",
          "_lastNameMember": ": Last name of the member"
        },
        "return": "a flag refered that the member enrolled succefflly."
      }
    },
    "title": "Crowd Member  "
  },
  "userdoc": {
    "methods": {
      "enrolled()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "getMember()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "getMemeberCount()": {
        "notice": "This function called by  user interface to get info of specific member"
      },
      "storeMember(string,string,string)": {
        "notice": "This function called by frontend to pass the parameters and register new memebr"
      }
    }
  }
}