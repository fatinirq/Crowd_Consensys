{
  "contractName": "CrowdProject",
  "abi": [
    {
      "inputs": [
        {
          "name": "_PID",
          "type": "uint256"
        },
        {
          "name": "_admin",
          "type": "address"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_createdOn",
          "type": "uint256"
        },
        {
          "name": "_maxContributers",
          "type": "uint256"
        },
        {
          "name": "_discription",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "fundProject",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cont",
          "type": "uint8"
        }
      ],
      "name": "joinProject",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cont\",\"type\":\"uint8\"}],\"name\":\"joinProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fundProject\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_PID\",\"type\":\"uint256\"},{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_createdOn\",\"type\":\"uint256\"},{\"name\":\"_maxContributers\",\"type\":\"uint256\"},{\"name\":\"_discription\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"Creating a new instance of contract by CrowdProjectFactory contract. All the parameters are given by the CrowdProjectFactory contract.\",\"params\":{\"_PID\":\": A project Id, given by the CrowdProjectFactory.\",\"_admin\":\": .A project admin address.\",\"_createdOn\":\": .A project date of creation.\",\"_discription\":\": A project describtion.\",\"_maxContributers\":\": .A max number of project required members.\",\"_name\":\": .A project name.\"}},\"fundProject()\":{\"details\":\"It is used to transfer the funds to the project contract\"},\"getAdmin()\":{\"details\":\"It is used if the caller is the project admin or not. .\",\"return\":\"the address of the admin.\"},\"joinProject(uint8)\":{\"details\":\"It is used to add new member to the project.\",\"return\":\"the address of the admin.\"}},\"title\":\"Crowd Project: used to create a seperated contract for each crowd member want to register and collect team for it in the crowd. It is initialized and deployed by the main contract of CrowdProjectFactory\"},\"userdoc\":{\"methods\":{\"constructor\":\"This constructor for initializing the project state variable called\",\"fundProject()\":{\"notice\":\"This functon is planed to be exploited in the next step.\"},\"getAdmin()\":{\"notice\":\"This functon is planed to be exploited in the next step.\"},\"joinProject(uint8)\":{\"notice\":\"This functon is planed to be exploited in the next step.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdProject.sol\":\"CrowdProject\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol\":{\"keccak256\":\"0xfbe44b44c4f5d1c812c062c1de012255240275ebd575c981619105be35f66fe2\",\"urls\":[\"bzzr://a5079ce1706ffa79c68480309896bf18b9a2d883ec40c1354913c0a738b5be63\"]},\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdProject.sol\":{\"keccak256\":\"0x811ed2537a587154a9a295369e36e4ff62505e9a8dbec352c007df0bcd3c8f00\",\"urls\":[\"bzzr://ffaead42affa8026a8a005c68a8a05779e94ee656355e069cbdf3008aee30904\"]},\"/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol\":{\"keccak256\":\"0xc356240b3761a3b3547bd7caf05af3924573919311db7766763b9caa1587c540\",\"urls\":[\"bzzr://d6ac58b5d4a155600650dd3a3943cfd442ef38da1d49f0d8eb3b0d395f034dd6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200098038038062000980833981018060405262000037919081019062000304565b85600080018190555084600060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600060030190805190602001906200009f929190620001cb565b508060006002019080519060200190620000bb929190620001cb565b5081600060040181905550600160006005018190555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600160038111156200010657fe5b815250600060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836003811115620001b757fe5b0217905550905050505050505050620004cf565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200020e57805160ff19168380011785556200023f565b828001600101855582156200023f579182015b828111156200023e57825182559160200191906001019062000221565b5b5090506200024e919062000252565b5090565b6200027791905b808211156200027357600081600090555060010162000259565b5090565b90565b6000815190506200028b816200049b565b92915050565b600082601f830112620002a357600080fd5b8151620002ba620002b482620003fa565b620003cc565b91508082526020830160208301858383011115620002d757600080fd5b620002e483828462000465565b50505092915050565b600081519050620002fe81620004b5565b92915050565b60008060008060008060c087890312156200031e57600080fd5b60006200032e89828a01620002ed565b96505060206200034189828a016200027a565b955050604087015167ffffffffffffffff8111156200035f57600080fd5b6200036d89828a0162000291565b94505060606200038089828a01620002ed565b93505060806200039389828a01620002ed565b92505060a087015167ffffffffffffffff811115620003b157600080fd5b620003bf89828a0162000291565b9150509295509295509295565b6000604051905081810181811067ffffffffffffffff82111715620003f057600080fd5b8060405250919050565b600067ffffffffffffffff8211156200041257600080fd5b601f19601f8301169050602081019050919050565b600062000434826200043b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200048557808201518184015260208101905062000468565b8381111562000495576000848401525b50505050565b620004a68162000427565b8114620004b257600080fd5b50565b620004c0816200045b565b8114620004cc57600080fd5b50565b6104a180620004df6000396000f3fe6080604052600436106100345760003560e01c80636e9960c3146100395780638788862514610064578063d63dc6611461008d575b600080fd5b34801561004557600080fd5b5061004e610097565b60405161005b91906103b9565b60405180910390f35b34801561007057600080fd5b5061008b600480360361008691908101906102b5565b6100c3565b005b6100956101fd565b005b60008060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600501546000600401541161010f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610106906103d4565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182600381111561014257fe5b815250600060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360038111156101f257fe5b021790555090505050565b343373ffffffffffffffffffffffffffffffffffffffff16311015610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e906103f4565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561029d573d6000803e3d6000fd5b50565b6000813590506102af81610457565b92915050565b6000602082840312156102c757600080fd5b60006102d5848285016102a0565b91505092915050565b6102e781610425565b82525050565b60006102fa602a83610414565b91507f546869732070726f6a656374206973206e6f7420616363657074206e6577206360008301527f6f6e7472696275746572000000000000000000000000000000000000000000006020830152604082019050919050565b6000610360602e83610414565b91507f5468652073656e742076616c7565206973206c657373207468616e207468652060008301527f73656e6465722062616c616e63650000000000000000000000000000000000006020830152604082019050919050565b60006020820190506103ce60008301846102de565b92915050565b600060208201905081810360008301526103ed816102ed565b9050919050565b6000602082019050818103600083015261040d81610353565b9050919050565b600082825260208201905092915050565b600061043082610437565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6004811061046457600080fd5b5056fea265627a7a7230582079357acc92c7d296e7af4fd490f25fe2a4c70553460e01f8b44a1ed998dc5c5c6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80636e9960c3146100395780638788862514610064578063d63dc6611461008d575b600080fd5b34801561004557600080fd5b5061004e610097565b60405161005b91906103b9565b60405180910390f35b34801561007057600080fd5b5061008b600480360361008691908101906102b5565b6100c3565b005b6100956101fd565b005b60008060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600501546000600401541161010f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610106906103d4565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182600381111561014257fe5b815250600060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360038111156101f257fe5b021790555090505050565b343373ffffffffffffffffffffffffffffffffffffffff16311015610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e906103f4565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561029d573d6000803e3d6000fd5b50565b6000813590506102af81610457565b92915050565b6000602082840312156102c757600080fd5b60006102d5848285016102a0565b91505092915050565b6102e781610425565b82525050565b60006102fa602a83610414565b91507f546869732070726f6a656374206973206e6f7420616363657074206e6577206360008301527f6f6e7472696275746572000000000000000000000000000000000000000000006020830152604082019050919050565b6000610360602e83610414565b91507f5468652073656e742076616c7565206973206c657373207468616e207468652060008301527f73656e6465722062616c616e63650000000000000000000000000000000000006020830152604082019050919050565b60006020820190506103ce60008301846102de565b92915050565b600060208201905081810360008301526103ed816102ed565b9050919050565b6000602082019050818103600083015261040d81610353565b9050919050565b600082825260208201905092915050565b600061043082610437565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6004811061046457600080fd5b5056fea265627a7a7230582079357acc92c7d296e7af4fd490f25fe2a4c70553460e01f8b44a1ed998dc5c5c6c6578706572696d656e74616cf50037",
  "sourceMap": "596:2886:1:-;;;1225:469;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:469:1;;;;;;;;;;;;;;;;;;;;;;;;1382:4;1374:3;:7;;:12;;;;1402:6;1392:3;:9;;;:16;;;;;;;;;;;;;;;;;;1430:5;1414:3;:15;;:21;;;;;;;;;;;;:::i;:::-;;1463:12;1441:3;:21;;:34;;;;;;;;;;;;:::i;:::-;;1501:16;1481:3;:19;;:36;;;;1542:1;1523:3;:18;;:20;;;;1571:86;;;;;;;;1606:10;1571:86;;;;;;1622:33;1571:86;;;;;;;;;;;1549:3;:9;;:21;1559:10;1549:21;;;;;;;;;;;;;;;:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:469;;;;;;596:2886;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:134;;683:6;677:13;668:22;;695:33;722:5;695:33;;;662:71;;;;;740:1144;;;;;;;960:3;948:9;939:7;935:23;931:33;928:2;;;977:1;974;967:12;928:2;1012:1;1029:64;1085:7;1076:6;1065:9;1061:22;1029:64;;;1019:74;;991:108;1130:2;1148:64;1204:7;1195:6;1184:9;1180:22;1148:64;;;1138:74;;1109:109;1270:2;1259:9;1255:18;1249:25;1294:18;1286:6;1283:30;1280:2;;;1326:1;1323;1316:12;1280:2;1346:74;1412:7;1403:6;1392:9;1388:22;1346:74;;;1336:84;;1228:198;1457:2;1475:64;1531:7;1522:6;1511:9;1507:22;1475:64;;;1465:74;;1436:109;1576:3;1595:64;1651:7;1642:6;1631:9;1627:22;1595:64;;;1585:74;;1555:110;1717:3;1706:9;1702:19;1696:26;1742:18;1734:6;1731:30;1728:2;;;1774:1;1771;1764:12;1728:2;1794:74;1860:7;1851:6;1840:9;1836:22;1794:74;;;1784:84;;1675:199;922:962;;;;;;;;;1891:256;;1953:2;1947:9;1937:19;;1991:4;1983:6;1979:17;2090:6;2078:10;2075:22;2054:18;2042:10;2039:34;2036:62;2033:2;;;2111:1;2108;2101:12;2033:2;2131:10;2127:2;2120:22;1931:216;;;;;2154:259;;2298:18;2290:6;2287:30;2284:2;;;2330:1;2327;2320:12;2284:2;2374:4;2370:9;2363:4;2355:6;2351:17;2347:33;2339:41;;2403:4;2397;2393:15;2385:23;;2221:192;;;;2420:91;;2482:24;2500:5;2482:24;;;2471:35;;2465:46;;;;2518:121;;2591:42;2584:5;2580:54;2569:65;;2563:76;;;;2646:72;;2708:5;2697:16;;2691:27;;;;2726:268;2791:1;2798:101;2812:6;2809:1;2806:13;2798:101;;;2888:1;2883:3;2879:11;2873:18;2869:1;2864:3;2860:11;2853:39;2834:2;2831:1;2827:10;2822:15;;2798:101;;;2914:6;2911:1;2908:13;2905:2;;;2979:1;2970:6;2965:3;2961:16;2954:27;2905:2;2775:219;;;;;3002:117;3071:24;3089:5;3071:24;;;3064:5;3061:35;3051:2;;3110:1;3107;3100:12;3051:2;3045:74;;3126:117;3195:24;3213:5;3195:24;;;3188:5;3185:35;3175:2;;3234:1;3231;3224:12;3175:2;3169:74;;596:2886:1;;;;;;;",
  "deployedSourceMap": "596:2886:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3464:8;;;2386:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2386:73:1;;;:::i;:::-;;;;;;;;;;;;;;;;2961:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2961:169:1;;;;;;;;;;;;;;;;:::i;:::-;;2605:177;;;:::i;:::-;;2386:73;2426:7;2446:3;:9;;;;;;;;;;;;2439:17;;2386:73;:::o;2961:169::-;1952:3;:18;;;1932:3;:19;;;:38;1924:93;;;;;;;;;;;;;;;;;;;;;;3066:58;;;;;;;;3101:10;3066:58;;;;;;3117:5;3066:58;;;;;;;;;;;3044:3;:9;;:21;3054:10;3044:21;;;;;;;;;;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2961:169;:::o;2605:177::-;2679:9;2658:10;:18;;;:30;;2649:90;;;;;;;;;;;;;;;;;;;;;;2752:4;2744:22;;:33;2767:9;2744:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2744:33:1;2605:177::o;5:162:-1:-;;101:6;88:20;79:29;;113:49;156:5;113:49;;;73:94;;;;;174:273;;294:2;282:9;273:7;269:23;265:32;262:2;;;310:1;307;300:12;262:2;345:1;362:69;423:7;414:6;403:9;399:22;362:69;;;352:79;;324:113;256:191;;;;;454:113;537:24;555:5;537:24;;;532:3;525:37;519:48;;;575:465;;735:67;799:2;794:3;735:67;;;728:74;;835:66;831:1;826:3;822:11;815:87;936:66;931:2;926:3;922:12;915:88;1031:2;1026:3;1022:12;1015:19;;721:319;;;;1049:465;;1209:67;1273:2;1268:3;1209:67;;;1202:74;;1309:66;1305:1;1300:3;1296:11;1289:87;1410:66;1405:2;1400:3;1396:12;1389:88;1505:2;1500:3;1496:12;1489:19;;1195:319;;;;1522:213;;1640:2;1629:9;1625:18;1617:26;;1654:71;1722:1;1711:9;1707:17;1698:6;1654:71;;;1611:124;;;;;1742:407;;1933:2;1922:9;1918:18;1910:26;;1983:9;1977:4;1973:20;1969:1;1958:9;1954:17;1947:47;2008:131;2134:4;2008:131;;;2000:139;;1904:245;;;;2156:407;;2347:2;2336:9;2332:18;2324:26;;2397:9;2391:4;2387:20;2383:1;2372:9;2368:17;2361:47;2422:131;2548:4;2422:131;;;2414:139;;2318:245;;;;2571:163;;2686:6;2681:3;2674:19;2723:4;2718:3;2714:14;2699:29;;2667:67;;;;;2742:91;;2804:24;2822:5;2804:24;;;2793:35;;2787:46;;;;2840:121;;2913:42;2906:5;2902:54;2891:65;;2885:76;;;;2968:110;3053:1;3046:5;3043:12;3033:2;;3069:1;3066;3059:12;3033:2;3027:51;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n/// @title A simulator for crowd sourcing and funding members and projects\n/// @author Fatin Alkinani\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without side effects\npragma experimental ABIEncoderV2;\nimport \"./CrowdStructure.sol\";\nimport \"./CrowdMember.sol\";\n\n/** @title Crowd Project: used to create a seperated contract for each crowd member want to register and collect team for it\nin the crowd. It is initialized and deployed by the main contract of CrowdProjectFactory\n  */\n contract CrowdProject\n {\n\n//state variables\nCrowdStructure.Project  prj;\n\n/** @notice This constructor for initializing the project state variable called\n  * @dev Creating a new instance of contract by CrowdProjectFactory contract.\n   All the parameters are given by the CrowdProjectFactory contract.\n  * @param _PID : A project Id, given by the CrowdProjectFactory.\n  * @param _admin : .A project admin address.\n  * @param _name : .A project name.\n  * @param _createdOn : .A project date of creation.\n  * @param _maxContributers : .A max number of project required members.\n  * @param _discription : A project describtion.\n  */\nconstructor(uint _PID,  address _admin, string memory _name, uint256 _createdOn, uint256 _maxContributers, string memory _discription) public\n{\n\n    prj.PID=_PID;\n    prj.admin=_admin;\n    prj.projectName=_name;\n    prj.projectDiscrption=_discription;\n    prj.maxContributers=_maxContributers;\n    prj.noContributers=1;\n    prj.staff[msg.sender]=CrowdStructure.ProjectMember ({adr:msg.sender,cont:CrowdStructure.Contribution.Admin}) ;\n  //  emit LogProject(_admin);\n\n\n}\n// a modifier is used to check if the sender is admin or not\nmodifier isAdmin()\n{\n  require(msg.sender==getAdmin(),\"only admin\");\n  _;\n}\n/// A modifier to check if the project can accept new members or not.\nmodifier isOpen()\n{\n  require(prj.maxContributers>prj.noContributers, \"This project is not accept new contributer\");\n  _;\n}\n\n/// This function is a pending work for future steps\nmodifier isCrowdMember()\n{\n  address _adr=msg.sender;\n\n  //require(CrowdMember.getEnrolledAddress[_adr]==true);\n  _;\n}\n\n/** @notice  This functon is planed to be exploited in the next step.\n  * @dev    It is used if the caller is the project admin or not. .\n  *\n  * @return  the address of the admin.\n  */\nfunction getAdmin()\nview\npublic\nreturns(address)\n{\n  return(prj.admin);\n}\n/** @notice  This functon is planed to be exploited in the next step.\n  * @dev    It is used to transfer the funds to the project contract\n  */\n function fundProject() public payable\n {\n   require (msg.sender.balance>= msg.value, \"The sent value is less than the sender balance\");\n   address(this).transfer(msg.value);\n\n }\n\n /** @notice  This functon is planed to be exploited in the next step.\n   * @dev     It is used to add new member to the project.\n   * @return  the address of the admin.\n   */\n function joinProject(CrowdStructure.Contribution _cont)\n  public\n  isOpen\n\n {\n     prj.staff[msg.sender]=CrowdStructure.ProjectMember ({adr:msg.sender,cont:_cont}) ;\n\n }\n // Fallback function - Called if other functions don't match call or\n    // sent ether without data\n    // Typically, called when invalid data is sent\n    // Added so ether sent to this contract is reverted if the contract fails\n    // otherwise, the sender's money is transferred to contract\nfunction () external payable {\n        revert();\n    }\n\n}\n",
  "sourcePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdProject.sol",
  "ast": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdProject.sol",
    "exportedSymbols": {
      "CrowdProject": [
        346
      ]
    },
    "id": 347,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 176,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "id": 177,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:1"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 586,
        "src": "316:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
        "file": "./CrowdMember.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 175,
        "src": "347:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Project: used to create a seperated contract for each crowd member want to register and collect team for it\nin the crowd. It is initialized and deployed by the main contract of CrowdProjectFactory",
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346
        ],
        "name": "CrowdProject",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 181,
            "name": "prj",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "640:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Project_$584_storage",
              "typeString": "struct CrowdStructure.Project"
            },
            "typeName": {
              "contractScope": null,
              "id": 180,
              "name": "CrowdStructure.Project",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 584,
              "src": "640:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Project_$584_storage_ptr",
                "typeString": "struct CrowdStructure.Project"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "1367:327:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1374:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 569,
                      "src": "1374:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 199,
                      "name": "_PID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "1382:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1374:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1392:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "1392:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1402:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1392:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1414:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "projectName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "1414:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1430:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1414:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1441:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "projectDiscrption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 573,
                      "src": "1441:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 217,
                      "name": "_discription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1463:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1441:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1481:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxContributers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "1481:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_maxContributers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1501:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1481:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1523:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noContributers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "1523:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1542:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1523:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1549:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "1549:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectMember_$567_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.ProjectMember storage ref)"
                        }
                      },
                      "id": 237,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1559:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1559:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                        "typeString": "struct CrowdStructure.ProjectMember storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "1606:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1606:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "CrowdStructure",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "1622:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                                "typeString": "type(library CrowdStructure)"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Contribution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "1622:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Contribution_$555_$",
                              "typeString": "type(enum CrowdStructure.Contribution)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1622:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "CrowdStructure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "1571:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                            "typeString": "type(library CrowdStructure)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ProjectMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 567,
                        "src": "1571:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProjectMember_$567_storage_ptr_$",
                          "typeString": "type(struct CrowdStructure.ProjectMember storage pointer)"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "adr",
                        "cont"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1571:86:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_memory",
                        "typeString": "struct CrowdStructure.ProjectMember memory"
                      }
                    },
                    "src": "1549:108:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                      "typeString": "struct CrowdStructure.ProjectMember storage ref"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:108:1"
                }
              ]
            },
            "documentation": "@notice This constructor for initializing the project state variable called\n@dev Creating a new instance of contract by CrowdProjectFactory contract.\nAll the parameters are given by the CrowdProjectFactory contract.\n@param _PID : A project Id, given by the CrowdProjectFactory.\n@param _admin : .A project admin address.\n@param _name : .A project name.\n@param _createdOn : .A project date of creation.\n@param _maxContributers : .A max number of project required members.\n@param _discription : A project describtion.",
            "id": 249,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_PID",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1237:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1249:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1265:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "name": "_createdOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1286:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "name": "_maxContributers",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1306:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "_discription",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1332:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:123:1"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:0:1"
            },
            "scope": 346,
            "src": "1225:469:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "1775:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "1787:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1787:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 254,
                            "name": "getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "1799:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1799:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1787:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1779:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:44:1"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "1827:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "name": "isAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:2:1"
            },
            "src": "1756:75:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1920:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "prj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1932:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$584_storage",
                              "typeString": "struct CrowdStructure.Project storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxContributers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "1932:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "prj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1952:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$584_storage",
                              "typeString": "struct CrowdStructure.Project storage ref"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "noContributers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 579,
                          "src": "1952:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1932:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070726f6a656374206973206e6f7420616363657074206e657720636f6e7472696275746572",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1972:44:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4768fe57c4e16f030c5efb2de7dda2b086c1ce77a89e9772a5412153ee8949d1",
                          "typeString": "literal_string \"This project is not accept new contributer\""
                        },
                        "value": "This project is not accept new contributer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4768fe57c4e16f030c5efb2de7dda2b086c1ce77a89e9772a5412153ee8949d1",
                          "typeString": "literal_string \"This project is not accept new contributer\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1924:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:93:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:93:1"
                },
                {
                  "id": 273,
                  "nodeType": "PlaceholderStatement",
                  "src": "2021:1:1"
                }
              ]
            },
            "documentation": "A modifier to check if the project can accept new members or not.",
            "id": 275,
            "name": "isOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1917:2:1"
            },
            "src": "1902:123:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2105:93:1",
              "statements": [
                {
                  "assignments": [
                    278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 278,
                      "name": "_adr",
                      "nodeType": "VariableDeclaration",
                      "scope": 283,
                      "src": "2109:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 277,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2109:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "2122:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2122:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2109:23:1"
                },
                {
                  "id": 282,
                  "nodeType": "PlaceholderStatement",
                  "src": "2194:1:1"
                }
              ]
            },
            "documentation": "This function is a pending work for future steps",
            "id": 284,
            "name": "isCrowdMember",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2102:2:1"
            },
            "src": "2080:118:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "2435:24:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 289,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "2446:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "admin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 571,
                        "src": "2446:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 291,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2445:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 292,
                  "nodeType": "Return",
                  "src": "2439:17:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev    It is used if the caller is the project admin or not. .\n  * @return  the address of the admin.",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2403:2:1"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "2426:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2425:9:1"
            },
            "scope": 346,
            "src": "2386:73:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "2644:138:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 298,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "2658:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2658:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2658:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 301,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2679:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2679:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2658:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652073656e742076616c7565206973206c657373207468616e207468652073656e6465722062616c616e6365",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:48:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a81eb1eefd56912386e18fceae1073253f3fe738b302c67690d6379cc74e2f40",
                          "typeString": "literal_string \"The sent value is less than the sender balance\""
                        },
                        "value": "The sent value is less than the sender balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a81eb1eefd56912386e18fceae1073253f3fe738b302c67690d6379cc74e2f40",
                          "typeString": "literal_string \"The sent value is less than the sender balance\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "2649:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:90:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2767:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2767:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2752:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrowdProject_$346",
                              "typeString": "contract CrowdProject"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrowdProject_$346",
                              "typeString": "contract CrowdProject"
                            }
                          ],
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2744:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2744:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2744:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2744:33:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev    It is used to transfer the funds to the project contract",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:2:1"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2644:0:1"
            },
            "scope": 346,
            "src": "2605:177:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "3037:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 323,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "3044:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "3044:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectMember_$567_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.ProjectMember storage ref)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 325,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "3054:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3054:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3044:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                        "typeString": "struct CrowdStructure.ProjectMember storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "3101:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3101:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "_cont",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 318,
                          "src": "3117:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 329,
                          "name": "CrowdStructure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "3066:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                            "typeString": "type(library CrowdStructure)"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ProjectMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 567,
                        "src": "3066:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProjectMember_$567_storage_ptr_$",
                          "typeString": "type(struct CrowdStructure.ProjectMember storage pointer)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "adr",
                        "cont"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3066:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_memory",
                        "typeString": "struct CrowdStructure.ProjectMember memory"
                      }
                    },
                    "src": "3044:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                      "typeString": "struct CrowdStructure.ProjectMember storage ref"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:80:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev     It is used to add new member to the project.\n@return  the address of the admin.",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 320,
                  "name": "isOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 275,
                  "src": "3028:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3028:6:1"
              }
            ],
            "name": "joinProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "_cont",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2982:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Contribution_$555",
                    "typeString": "enum CrowdStructure.Contribution"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 317,
                    "name": "CrowdStructure.Contribution",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 555,
                    "src": "2982:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Contribution_$555",
                      "typeString": "enum CrowdStructure.Contribution"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2981:35:1"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3037:0:1"
            },
            "scope": 346,
            "src": "2961:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "3454:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 341,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        994,
                        995
                      ],
                      "referencedDeclaration": 994,
                      "src": "3464:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 345,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3434:2:1"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3454:0:1"
            },
            "scope": 346,
            "src": "3425:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 347,
        "src": "596:2886:1"
      }
    ],
    "src": "0:3483:1"
  },
  "legacyAST": {
    "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdProject.sol",
    "exportedSymbols": {
      "CrowdProject": [
        346
      ]
    },
    "id": 347,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 176,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "id": 177,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "282:33:1"
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdStructure.sol",
        "file": "./CrowdStructure.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 586,
        "src": "316:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/fatin/MyProjects/Solidity/CrowdFun/contracts/CrowdMember.sol",
        "file": "./CrowdMember.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 347,
        "sourceUnit": 175,
        "src": "347:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd Project: used to create a seperated contract for each crowd member want to register and collect team for it\nin the crowd. It is initialized and deployed by the main contract of CrowdProjectFactory",
        "fullyImplemented": true,
        "id": 346,
        "linearizedBaseContracts": [
          346
        ],
        "name": "CrowdProject",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 181,
            "name": "prj",
            "nodeType": "VariableDeclaration",
            "scope": 346,
            "src": "640:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Project_$584_storage",
              "typeString": "struct CrowdStructure.Project"
            },
            "typeName": {
              "contractScope": null,
              "id": 180,
              "name": "CrowdStructure.Project",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 584,
              "src": "640:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Project_$584_storage_ptr",
                "typeString": "struct CrowdStructure.Project"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "1367:327:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1374:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "PID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 569,
                      "src": "1374:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 199,
                      "name": "_PID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "1382:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1374:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1392:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 571,
                      "src": "1392:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1402:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1392:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1414:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "projectName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 575,
                      "src": "1414:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1430:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1414:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1441:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "projectDiscrption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 573,
                      "src": "1441:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 217,
                      "name": "_discription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1463:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1441:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1481:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxContributers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 577,
                      "src": "1481:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_maxContributers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "1501:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1481:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "prj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "1523:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$584_storage",
                          "typeString": "struct CrowdStructure.Project storage ref"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noContributers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "1523:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1542:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1523:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 232,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "1549:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "1549:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectMember_$567_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.ProjectMember storage ref)"
                        }
                      },
                      "id": 237,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "1559:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1559:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                        "typeString": "struct CrowdStructure.ProjectMember storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "1606:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1606:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "CrowdStructure",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "1622:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                                "typeString": "type(library CrowdStructure)"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Contribution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "1622:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Contribution_$555_$",
                              "typeString": "type(enum CrowdStructure.Contribution)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1622:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "CrowdStructure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "1571:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                            "typeString": "type(library CrowdStructure)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ProjectMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 567,
                        "src": "1571:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProjectMember_$567_storage_ptr_$",
                          "typeString": "type(struct CrowdStructure.ProjectMember storage pointer)"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "adr",
                        "cont"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1571:86:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_memory",
                        "typeString": "struct CrowdStructure.ProjectMember memory"
                      }
                    },
                    "src": "1549:108:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                      "typeString": "struct CrowdStructure.ProjectMember storage ref"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:108:1"
                }
              ]
            },
            "documentation": "@notice This constructor for initializing the project state variable called\n@dev Creating a new instance of contract by CrowdProjectFactory contract.\nAll the parameters are given by the CrowdProjectFactory contract.\n@param _PID : A project Id, given by the CrowdProjectFactory.\n@param _admin : .A project admin address.\n@param _name : .A project name.\n@param _createdOn : .A project date of creation.\n@param _maxContributers : .A max number of project required members.\n@param _discription : A project describtion.",
            "id": 249,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_PID",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1237:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1249:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1265:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "name": "_createdOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1286:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "name": "_maxContributers",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1306:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "_discription",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "1332:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1236:123:1"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:0:1"
            },
            "scope": 346,
            "src": "1225:469:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "1775:56:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "1787:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1787:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 254,
                            "name": "getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "1799:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1799:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1787:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1779:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:44:1"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "1827:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 262,
            "name": "isAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:2:1"
            },
            "src": "1756:75:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1920:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "prj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1932:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$584_storage",
                              "typeString": "struct CrowdStructure.Project storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxContributers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "1932:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "prj",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1952:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$584_storage",
                              "typeString": "struct CrowdStructure.Project storage ref"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "noContributers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 579,
                          "src": "1952:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1932:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070726f6a656374206973206e6f7420616363657074206e657720636f6e7472696275746572",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1972:44:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4768fe57c4e16f030c5efb2de7dda2b086c1ce77a89e9772a5412153ee8949d1",
                          "typeString": "literal_string \"This project is not accept new contributer\""
                        },
                        "value": "This project is not accept new contributer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4768fe57c4e16f030c5efb2de7dda2b086c1ce77a89e9772a5412153ee8949d1",
                          "typeString": "literal_string \"This project is not accept new contributer\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "1924:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:93:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:93:1"
                },
                {
                  "id": 273,
                  "nodeType": "PlaceholderStatement",
                  "src": "2021:1:1"
                }
              ]
            },
            "documentation": "A modifier to check if the project can accept new members or not.",
            "id": 275,
            "name": "isOpen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1917:2:1"
            },
            "src": "1902:123:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2105:93:1",
              "statements": [
                {
                  "assignments": [
                    278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 278,
                      "name": "_adr",
                      "nodeType": "VariableDeclaration",
                      "scope": 283,
                      "src": "2109:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 277,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2109:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "2122:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2122:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2109:23:1"
                },
                {
                  "id": 282,
                  "nodeType": "PlaceholderStatement",
                  "src": "2194:1:1"
                }
              ]
            },
            "documentation": "This function is a pending work for future steps",
            "id": 284,
            "name": "isCrowdMember",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2102:2:1"
            },
            "src": "2080:118:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 293,
              "nodeType": "Block",
              "src": "2435:24:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 289,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "2446:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "admin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 571,
                        "src": "2446:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 291,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2445:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 292,
                  "nodeType": "Return",
                  "src": "2439:17:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev    It is used if the caller is the project admin or not. .\n  * @return  the address of the admin.",
            "id": 294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2403:2:1"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 294,
                  "src": "2426:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2425:9:1"
            },
            "scope": 346,
            "src": "2386:73:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "2644:138:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 298,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "2658:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2658:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2658:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 301,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2679:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2679:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2658:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652073656e742076616c7565206973206c657373207468616e207468652073656e6465722062616c616e6365",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:48:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a81eb1eefd56912386e18fceae1073253f3fe738b302c67690d6379cc74e2f40",
                          "typeString": "literal_string \"The sent value is less than the sender balance\""
                        },
                        "value": "The sent value is less than the sender balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a81eb1eefd56912386e18fceae1073253f3fe738b302c67690d6379cc74e2f40",
                          "typeString": "literal_string \"The sent value is less than the sender balance\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        992,
                        993
                      ],
                      "referencedDeclaration": 993,
                      "src": "2649:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:90:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "2767:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2767:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2752:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrowdProject_$346",
                              "typeString": "contract CrowdProject"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrowdProject_$346",
                              "typeString": "contract CrowdProject"
                            }
                          ],
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2744:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2744:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2744:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2744:33:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev    It is used to transfer the funds to the project contract",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:2:1"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2644:0:1"
            },
            "scope": 346,
            "src": "2605:177:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "3037:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 323,
                          "name": "prj",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 181,
                          "src": "3044:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$584_storage",
                            "typeString": "struct CrowdStructure.Project storage ref"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staff",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 583,
                        "src": "3044:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectMember_$567_storage_$",
                          "typeString": "mapping(address => struct CrowdStructure.ProjectMember storage ref)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 325,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "3054:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3054:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3044:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                        "typeString": "struct CrowdStructure.ProjectMember storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "3101:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3101:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "_cont",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 318,
                          "src": "3117:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_Contribution_$555",
                            "typeString": "enum CrowdStructure.Contribution"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 329,
                          "name": "CrowdStructure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "3066:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrowdStructure_$585_$",
                            "typeString": "type(library CrowdStructure)"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ProjectMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 567,
                        "src": "3066:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProjectMember_$567_storage_ptr_$",
                          "typeString": "type(struct CrowdStructure.ProjectMember storage pointer)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "adr",
                        "cont"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3066:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectMember_$567_memory",
                        "typeString": "struct CrowdStructure.ProjectMember memory"
                      }
                    },
                    "src": "3044:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectMember_$567_storage",
                      "typeString": "struct CrowdStructure.ProjectMember storage ref"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:80:1"
                }
              ]
            },
            "documentation": "@notice  This functon is planed to be exploited in the next step.\n@dev     It is used to add new member to the project.\n@return  the address of the admin.",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 320,
                  "name": "isOpen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 275,
                  "src": "3028:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3028:6:1"
              }
            ],
            "name": "joinProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "_cont",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "2982:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Contribution_$555",
                    "typeString": "enum CrowdStructure.Contribution"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 317,
                    "name": "CrowdStructure.Contribution",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 555,
                    "src": "2982:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Contribution_$555",
                      "typeString": "enum CrowdStructure.Contribution"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2981:35:1"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3037:0:1"
            },
            "scope": 346,
            "src": "2961:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "3454:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 341,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        994,
                        995
                      ],
                      "referencedDeclaration": 994,
                      "src": "3464:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 345,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3434:2:1"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3454:0:1"
            },
            "scope": 346,
            "src": "3425:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 347,
        "src": "596:2886:1"
      }
    ],
    "src": "0:3483:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-02-02T16:00:15.864Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "Creating a new instance of contract by CrowdProjectFactory contract. All the parameters are given by the CrowdProjectFactory contract.",
        "params": {
          "_PID": ": A project Id, given by the CrowdProjectFactory.",
          "_admin": ": .A project admin address.",
          "_createdOn": ": .A project date of creation.",
          "_discription": ": A project describtion.",
          "_maxContributers": ": .A max number of project required members.",
          "_name": ": .A project name."
        }
      },
      "fundProject()": {
        "details": "It is used to transfer the funds to the project contract"
      },
      "getAdmin()": {
        "details": "It is used if the caller is the project admin or not. .",
        "return": "the address of the admin."
      },
      "joinProject(uint8)": {
        "details": "It is used to add new member to the project.",
        "return": "the address of the admin."
      }
    },
    "title": "Crowd Project: used to create a seperated contract for each crowd member want to register and collect team for it in the crowd. It is initialized and deployed by the main contract of CrowdProjectFactory"
  },
  "userdoc": {
    "methods": {
      "constructor": "This constructor for initializing the project state variable called",
      "fundProject()": {
        "notice": "This functon is planed to be exploited in the next step."
      },
      "getAdmin()": {
        "notice": "This functon is planed to be exploited in the next step."
      },
      "joinProject(uint8)": {
        "notice": "This functon is planed to be exploited in the next step."
      }
    }
  }
}